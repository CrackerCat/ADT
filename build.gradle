import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.1'
    }
}


plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":main")
}


def adtVersion = "0.0.6"
application {
    mainClass = 'com.coding.Main'
}


task release(dependsOn: assemble) {
    doLast {
        println("----- create release start -----")
        String dir = "./release"
        delete(dir)
        String src = dir + File.separator + "src"
        new File(src).mkdirs()
        copy {
            from "./build/libs/ADT-all.jar"
            into src
            println("ADT.jar copy success.")
        }
        copy {
            from "./tools"
            into src + File.separator + "tools"
            println("tools dir copy success.")
        }
        createBootBat(src)
        project.ant.zip(
                basedir: src,
                destfile: dir + File.separator + "adt_" + adtVersion + ".zip"
        )
        println("----- create release end -----")
    }
}

private static def createBootBat(String dir) {
    File bat = new File(dir, "ADT.bat")
    FileOutputStream fos = new FileOutputStream(bat)
    fos.write("java -jar ADT-all.jar".getBytes(StandardCharsets.UTF_8))
    fos.flush()
    fos.close()
}