import java.nio.charset.StandardCharsets
import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.1'
    }
}


plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":main")
}


def versionName = "0.1.7"
def versionCode = 17
application {
    mainClass = 'com.coding.Main'
}

task createProperties() {
    doLast {
        systemOut("createProperties start")
        File dir = new File(projectDir, "main/src/main/resources/VERSION-INF")
        if (!dir.exists()) {
            dir.mkdirs()
        }
        String name = "adt.properties"
        File out = new File(dir, name)
        HashMap<String, Object> params = new HashMap<>()
        params.put("versionName", versionName)
        params.put("versionCode", versionCode)
        params.put("data", getCurDate())
        FileOutputStream fos = new FileOutputStream(out)
        for (Map.Entry<String, Object> entry : params) {
            String str = "${entry.key}=${entry.value}\n"
            fos.write(str.getBytes(StandardCharsets.UTF_8))
        }
        fos.close()
        systemOut("createProperties end")
    }
}

task release() {
    dependsOn(createProperties)
    dependsOn(assemble)
    assemble.mustRunAfter(createProperties)
    doLast {
        systemOut("create release start")
        String dir = projectDir.absolutePath + File.separator + "release"
        delete(dir)
        String src = dir + File.separator + "src"
        mkdir(src)
        copy {
            from "./build/libs/ADT-all.jar"
            into src
            systemOut("ADT.jar copy success")
        }
        copy {
            from "./tools"
            into src + File.separator + "tools"
            systemOut("tools dir copy success")
        }
        createBootBat(src)
        project.ant.zip(
                basedir: src,
                destfile: dir + File.separator + "adt.zip"
        )
        systemOut("create release end")
    }
}

//获取当前日期
private static def getCurDate() {
    def date = new Date()
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA)
    return formatter.format(date)
}

//创建.bat启动文件
private static def createBootBat(String dir) {
    File bat = new File(dir, "ADT.bat")
    FileOutputStream fos = new FileOutputStream(bat)
    fos.write("java -jar ADT-all.jar".getBytes(StandardCharsets.UTF_8))
    fos.flush()
    fos.close()
}

private static def systemOut(String msg) {
    println("----- $msg -----")
}